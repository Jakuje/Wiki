h1. Getting involved in OpenSC development

Contributions to OpenSC are welcome! This page explains how to contribute to OpenSC.

h2. Development process

 * OpenSC development is coordinated via the list opensc-devel@lists.sourceforge.net. See "mailing list":Mailing-lists. Start helping the community and reviewing [report:10 support tickets]. Patches fixing [/newticket new] or [report:1 existing bugs] may be attached to the ticket or sent to the "opensc-devel mailing list":Mailing-lists.
 * Contribution should comply with coding guidelines. A minimal <b>[[Development Policy|Development-Policy]]</b> exists.
 * To develop OpenSC, you may use github.
 * [[DRAFT Howto add/support a new card|Adding-a-new-card-driver]]
 * Test Tools
  * "Minidriver":https://github.com/OpenSC/OpenSC/issues/426#issuecomment-100978020 


h2. github process

"GitHub":https://github.com is a web-based hosting service for software development projects using the Git revision control system.

 * OpenSC source code is hosted on "GitHub":https://github.com :
 * The "OpenSC master branch":https://github.com/OpenSC/OpenSC is available using:
<pre><code>git clone git://github.com/OpenSC/OpenSC.git
cd OpenSC
./bootstrap 
</code></pre>
 * Read "latest commits":https://github.com/OpenSC/OpenSC/commits/master.
 * To start coding, create a "Github":https://github.com account. Creating an account with one project is free. Upload your public ssh keys.
 * Visit "OpenSC Github project":https://github.com/OpenSC/OpenSC and click on Fork to create your own OpenSC repository. Majors features should have their own branch. Bug fixes should go to the Staging branch. 
 * To propose a commit, make a pull request to the main OpenSC "master":https://github.com/OpenSC/OpenSC/tree/master repository. 
 * Advertise your pull request. Pull requests are discussed and applied by github core developers.

h2. Pull Requests

The github pull requests (PR) to "OpenSC/OpenSC":https://github.com/OpenSC/OpenSC/pulls are/can-be checked automatically for building on Ubuntu and Vista. At the moment this feature is installed to help the contributors to reveal the compilation errors on the platforms that they do not used to manage (mostly Windows).

Some restrictions in permissions to run the build on the PR's merged repository are due to the implementation of jenkins plugin "Github pull request builder":https://wiki.jenkins-ci.org/display/JENKINS/Github+pull+request+builder+plugin:
* PRs from the github OpenSC organization members are built automatically, these members are 'admins';
* PRs from the users present in the CI internal 'whitelist' are built automatically;
* for the PRs from the other contributors jenkins CI adds the PR comment "Can one of the admins verify this patch?" to attract the attention of 'admins';
* using the codified comments to PR, 'admins' can add user to the 'whitelist' or (re)run the test;

Codified messages:
* "*ok to test*" -- authorization to run the test on merged repository;
* "*add to whitelist*" -- add user to whitelist;

h3. Examples

"PR-#97":https://github.com/OpenSC/OpenSC/pull/97:
* pull request fails the build of merged repository on windows-32;
* user 'mtausig' is added by 'admin' to internal CI 'whitelist', so that, the next PRs or updates of existing PRs from 'mtausig' will be built automatically.

"PR-#102":https://github.com/OpenSC/OpenSC/pull/102:
* successful built of the merged repository.

h2. Helper tools

 * To test/debug special hardware (smartcard/token), please open an account on OpenSC development server (information coming soon). The development server offers nearly all supported hardware, so you don't have to buy it. "Donation of free hardware":Donation-of-free-Hardware is also possible.
 * The OpenSC staging branch is also available to beta testers as binary packages (information coming soon). Releasing beta software to a large audience is part of the quality process.
 * The OpenSC staging branch is installed daily on test servers and go through a series of automatic regressions tests (information coming soon). Some vendors also offer free hardware for testin purpose.

h2. The Team

Current developers/maintainers with activity in Github, in alphabetical order:
 * Emanuele Pucciarelli ("Github":https://github.com/puccia/OpenSC)
 * Feitian team ("Github":https://github.com/entersafe)
 * Jean-Pierre Szikora ("Github":https://github.com/szikora/OpenSC)
 * Juan Antonio Martinez ("Github":https://github.com/jonsito/OpenSC)
 * Ludovic Rousseau ("Github":https://github.com/LudovicRousseau/OpenSC)
 * Martin Paljak ("Github":https://github.com/martinpaljak/OpenSC)
 * Pace Willisson ("Github":https://github.com/pacew/OpenSC)
 * Peter Marschall ("Github":https://github.com/marschap/OpenSC)
 * Viktor Tarasov ("Github":https://github.com/viktorTarasov/OpenSC)

Developers/maintainers with established SVN write access are, in alphabetical order:
 * Aleksey Samsonov (svn: s)
 * Alon Bar-Lev (svn: alonbl)
 * Andre Zepezauer (svn: andre)
 * Andreas Jellinghaus (svn: aj)
 * Douglas E. Engert (svn: dengert)
 * François Leblanc (svn: flc)
 * João Poupino (svn: joao)
 * Peter Koch (svn: pk)
 * Wolfgang Glas (svn: wolfgang.glas)
 

The Emeritus of the OpenSC developer team as well as project chronology is listed on "History-of-the-OpenSC-Project":History-of-the-OpenSC-Project.<br />
List of all people who have sent patches to OpenSC is available under <b>"AuthorsAndCredits":OpenSC-Credits</b>.

h2. All links

 * "Donation-of-free-Hardware":Donation-of-free-Hardware is always welcome. Thanks for your donation!
 * "OpenSC-Release-Howto":OpenSC-Release-Howto documents our release process. 
 * "Resources,-Links":Resources,-Links -- Standards, Documents, etc.
 * GermanApi -- Information about new eCardAPI published by German goverment
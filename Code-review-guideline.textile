h1. Code review guideline

Gerrit - along with Jenkins - is the review and test infrastructure.
Patches get into gerrit (see SourceCode ), people review them, and they eventually checked in to the mainstream code.

You can register to gerrit at "https://www.opensc-project.org/codereview/":https://www.opensc-project.org/codereview/

Ludovic actually asks you to do it:
"""
 I encourage every user to:
 - create a gerrit account
 - subscribe to the Email notifications. Go in Settings -> Watched
 Projects and check the 3 notifications boxes for the OpenSC project
 - review patches and add comments

 I was not subscribed to the notifications at the beginning and then
 missed a lot of patch submissions. If you want to follow the OpenSC
 development is very important to subscribe to gerrit notifications (I
 think).
"""

There are two things you can help with.

1. Review code. You can look at the submitted changes (e.g. all/open), and take a look at the diffs. You can add a comment, and a + or - to the patch. You can even comment to a line of the patch by clicking on the line number.
 Don't be afraid of this. There are some patches which are very simple or very broken, so not much needed to review them, and we help the lead developers with that. I am so dumb to  programming that I use java, and even I could succesfully review some patches.
 In code review you should try to figure out whether the code is okay. The first thing is if you see red in the diff, then there are some whitespacing problems. Anyone can pin that out.
 After that look whether it is commented at least minimally. And whether it does what the comment says. Now you can look for other problems: unchecked null pointers, buffer overruns, etc.
 The patch quality guidelines can be found at DevelopmentPolicy#Movingmasterforward

2. Test code. It is even easier. Jenkins have already checked whether it builds. If it builds, than all you have to do is to check out the commit, build it for yourself, and try whether it works as advertised. Well, sometimes it helps to have the necessary hardware. And sometimes vendors offer free hardware for testers!



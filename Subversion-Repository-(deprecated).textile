h1. Subversion Repository (deprecated)


h2. Git transition

 <b>NB! </b> OpenSC is moving to Git. For latest information check out SourceCode wiki page.

h2. SVN information

OpenSC is using "subversion":http://subversion.tigris.org/ as version control system (Read the ""Version Control with Subversion":http://svnbook.red-bean.com/" book).
SVN trunk versions of several repositories also have "official" mirrors on github.com, that are semi-regularly (at least weekly) synced. If you use git, use github mirrors to fork your trees.

<b>Get the latest source code:</b>
<pre><code>svn co http://www.opensc-project.org/svn/opensc/trunk opensc
</code></pre>

or from "github.com":http://github.com/martinpaljak/OpenSC:
<pre><code>git clone git://github.com/martinpaljak/OpenSC.git
</code></pre>

h2. Sub-project repositories

OpenSC contains several sub-project, each with their own subversion repository.
 * "Not found: text(([engine:browser browse online) link(engine_pkcs11])":wiki/engine_pkcs11], [engine:log view revision history], "github.com":http://github.com/martinpaljak/engine_pkcs11)
<pre><code>svn co http://www.opensc-project.org/svn/engine_pkcs11
</code></pre>
 * "Not found: text(([libp11:browser browse online) link(libp11])":wiki/libp11], [libp11:log view revision history], "github.com":http://github.com/martinpaljak/libp11)
<pre><code>svn co http://www.opensc-project.org/svn/libp11
</code></pre>
 * "Not found: text(([helper:browser browse online) link(pkcs11-helper])":wiki/pkcs11-helper], [helper:log view revision history])
<pre><code>svn co http://www.opensc-project.org/svn/pkcs11-helper
</code></pre>
 * opensc-java ("Not found: text(([java:browser browse online) link(Java]))":wiki/Java]), [java:log view revision history])
<pre><code>svn co http://www.opensc-project.org/svn/opensc-java
</code></pre>
 * "Not found: text(([pam_pkcs11:browser browse online) link(pam_pkcs11])":wiki/pam_pkcs11], [pam_pkcs11:log view revision history])
<pre><code>svn co http://www.opensc-project.org/svn/pam_pkcs11
</code></pre>


In our subversion repository we have
 * _trunk/_ contains the current development code
 * _branches/opensc-0.10_ contains the 0.10 maintenance branch
 * _releases/opensc-0.10.0_ contains the opensc 0.10.0 release code.

You can checkout these with the subversion commands
<pre><code>svn co http://www.opensc-project.org/svn/opensc/trunk/
svn co http://www.opensc-project.org/svn/opensc/branches/opensc-0.10/
svn co http://www.opensc-project.org/svn/opensc/releases/opensc-0.10.0/
</code></pre>

Note that the subversion repository only contains development files.
Before compiling the code in a working copy you need to run the "_./bootstrap_" script
to create required files like "_configure_" and "_Makefile.in_". You need to have
_autoconf_, _automake_ and _libtool_ installed on your system to do that.

Some people have reported problems with some HTTP proxies. If you find some problem,
you can maybe solve it by using https instead. Try to checkout the repository
like this: 
<pre><code>svn co --non-interactive https://www.opensc-project.org/svn/opensc/trunk/
svn co --non-interactive https://www.opensc-project.org/svn/opensc/branches/opensc-0.10/
svn co --non-interactive https://www.opensc-project.org/svn/opensc/releases/opensc-0.10.0/
</code></pre>

h1. Write access for developers

Developers with write access (see DevelopmentPolicy for more information about write access) usualy access the repository via HTTPS with authentication
using SSL client certificates. You might want to put something like this into your
_~/.subversion/servers_ file to point subversion to your client certificate:

<pre><code>[groups]
opensc = www.opensc-project.org

[opensc]
ssl-client-cert-file=/home/aj/.subversion/aj.p12  
</code></pre>

You can access the repositories:
<pre><code>svn co https://www.opensc-project.org/svn/opensc/trunk/
svn co https://www.opensc-project.org/svn/opensc/branches/opensc-0.10/
svn co https://www.opensc-project.org/svn/opensc/releases/opensc-0.10.0/
</code></pre>


h2. Creating distribution packages

To package OpenSC as tar.gz file you only need to type "make dist". However building
documentation etc. has been moved to scripts only called when you do this, so you might
need to install these tools to create a fully functional release:
<pre><code>wget, xsltproc, docbook-xsl, w3c-dtd-xhtml, doxygen
</code></pre>

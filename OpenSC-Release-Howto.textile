h1. OpenSC Release Howto

Releasing OpenSC should be simple and streamlined, yet a predictable and easily repeatable process. This page describes releasing OpenSC from Git.

h2. Generic Principles

At least one (or more, if needed) pre-releases must be done before the actual release. After a release candidate has been published, no more merges to the master branch should happen, only release-critical single commits can be cherry-picked and a new release candidate created. Normal development should continue when the final release is done.

h2. Preparing Security Relevant Changes

 * "Request a CVE":https://cveform.mitre.org/ in case of security relevant fixes or changes.
 * Update the "security advisories":https://github.com/OpenSC/OpenSC/wiki/OpenSC-security-advisories
 * Mention CVE ID in the _NEWS_ file

h2. Release Preparations in Version Control

Release (or RC) version must be changed in the following files:
 * _NEWS_ (Markdown)
 * _configure.ac_: change package version major/minor/fix as needed, RCs get the package suffix `_rc`, which is removed for the final release
 * _configure.ac_: Udate the "LT version number":https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html
 * appveyor.yml

Optionally, discuss changes to _NEWS_ by opening a "new issue":https://github.com/OpenSC/OpenSC/issues/new with your suggestions.

h2. Build and Test Binaries

 * Wait around 10 minutes to allow build artifacts be placed into the "nightly builds":https://github.com/OpenSC/Nightly. All builds must succeed and must not generate more warnings than the previous build.
 * Copy build artifacts selecting the correct branch using the hash of the release commit, e.g.:
 <pre><code>  git clone https://github.com/OpenSC/OpenSC --single-branch
  cd OpenSC
  BRANCH=`git log --max-count=1 --date=short --abbrev=8 --pretty=format:"%cd_%h"`
  wget https://github.com/OpenSC/Nightly/archive/${BRANCH}.zip
  unzip ${BRANCH}.zip </code></pre>
 * Do a separate smoke test for all installers and the tarball, "document your results in the Wiki":https://github.com/OpenSC/OpenSC/wiki/Smart-Card-Release-Testing.
 * If creating a final release, create an annotated tag instead of a lightweight tag:
 <pre><code>  git tag -a 0.20.0
  git push origin 0.20.0</code></pre>
 * Create a "new (draft) release":https://github.com/OpenSC/OpenSC/releases
 * For final releases, select the existing tag, e.g. _0.20.0_; for release candidates choose a new tag, e.g. _0.20.0-rc1_, which Github will automatically create as lightweight tag.
 * Describe the release including all changes to NEWS (Markdown)
 * Upload the build artifacts to the new release
 * Check _This is a pre-release_ if only creating a release candidate

h2. Announcement

 * Write announcement. Write short human readable version
  * Short overview of OpenSC
  * Important and visible (breaking) changes in this release (not a copy of _NEWS_ file)
  * URL-s for downloads
  * Pointers to full verbose information (list of commits, full changelog, closed bugs)
  * Plans for next release
 * Find someone to proofread the announcement.
 * Via mail publish the announcment on "opensc-announce@lists.sourceforge.net":https://sourceforge.net/p/opensc/mailman/opensc-announce/ and "opensc-devel@lists.sourceforge.net":https://sourceforge.net/p/opensc/mailman/opensc-devel/ lists.
 * In case of security relevant changes, forward the announcement to "oss-security@lists.openwall.com":https://www.openwall.com/lists/oss-security/
 * Update the "Main Wiki page":https://github.com/OpenSC/OpenSC/wiki
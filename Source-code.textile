h1. Source code


h2. Version control with Git

OpenSC source code is managed with "Git":http://book.git-scm.com/. The history of OpenSC source code versioning is from None -> CVS -> SVN -> Git. As the transitions have been done with automatic tools (cvs2svn, git-svn) some "corners" might be incorrect but the overall linear history of source code should be recognized and "git blame" should work as expected. 

Master repository is hosted on "Github":http://github.com: "https://github.com/OpenSC/OpenSC/":https://github.com/OpenSC/OpenSC/

h3. Getting the source code
<pre><code>git clone git://github.com/OpenSC/OpenSC.git
cd OpenSC</code></pre>

Individual developers also have their own Github trees, <b>[[Nightly Builds|Automated-OpenSC-builds]]</b> lists ones that you can get binaries from and <b>[[Get Involved|Getting-involved-in-OpenSC-development]]</b> lists all known active developers.

h2. Source code style and recommendations

Head to [[Development Policy|Development-Policy]] for now.

h2. Sending patches

First, please read DevelopmentPolicy for tips on how to prepare your patch and the commit message. Be prepared to re-work your patch based on feedback. All patches go through review and you can alos help doing <b>[[Code Review|Code-Review-GuideLine]]</b>.

h3. If you have forked on Github

  * Please open pull requests against staging branch
  * Do NOT send pulls requests containing merge commits (at the moment at least, needs discussion)

h3. Via mailing list or Trac

  * Prepare your patches (assuming, that you forked/cloned the repository and started your feature branch with _git checkout -b mychanges master_. NB! Always include the link to the ticket in commit message!
   * _git format-patch master..HEAD_
   * Send the generated _00XX-patch-description.patch_} files to opensc-devel mailing list
   * If you have a patch that fixes a ticket, you could also attach it to the relevant ticket

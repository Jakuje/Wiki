h1. Automated OpenSC builds

OpenSC continuous builds are managed by "Jenkins":http://jenkins-ci.org/, the dashboard with build statuses and statistics is accessible on "https://www.opensc-project.org/autobuild/":https://www.opensc-project.org/autobuild/

h2. Purpose and warnings

 * <b>Attention! </b> Nightly builds are based on bleeding edge software straight from the personal Git SourceCode repository of a developer, they might mess up your operating system, brick your smart card or kill your pet - not for the faint of heart. They might not install or uninstall, break support for your card or be otherwise broken. Stabilized and more tested nightly builds are verified and promoted to PreReleases.
 * <b>Attention! </b> The branches fed to autobuilds <b>SHOULD NOT</b> be used for pulling in history - they can be rebased or force-pushed or rolled back or deleted or whatsoever at any time. The primary purpose of a nightly build branch is for a developer to feed his code to the build machinery for testing purposes and to be able to distribute fixes for testing, before inclusion in the mainline staging tree.
<b>!!! Please read about ReportingBugs and give feedback</b> on any issues with binary installation packages to opensc-devel [[MailingList|Mailing-lists]] !!!

 * <b>Attention! </b> Always download the file with the biggest build number!
  * Unless if asked to test a specific build (with a build number or a Git commit hash) please download the <b>exact</b> file, not a later or earlier version.
 * <b>Attention! </b> If unsure, always <b>uninstall</b> the previous WindowsInstaller version from Control Panel before installing a new nightly, until the installer has been released as stable!
DEB and RPM packages for latest released Debian, Ubuntu and Fedora distros are planned but not yet available.

h3. Git builders & Downloads

OpenSC developers have their own Git trees, which are built in similar ways as the official releases, to ease testing in between two releases. In alphabetical order:
 * "Juan Antonio Martinez":https://github.com/jonsito, ""master":https://github.com/jonsito/OpenSC/tree/master" branch, published to "http://www.opensc-project.org/downloads/nightly/jonsito/":http://www.opensc-project.org/downloads/nightly/jonsito/ ("status":https://www.opensc-project.org/autobuild/view/Jonsito/) (topics: [[DNIe-(OpenDNIe)|DNIe-(OpenDNIe)]], SecureMessaging)
 * "Ludovic Rousseau":https://github.com/LudovicRousseau, ""master":https://github.com/LudovicRousseau/OpenSC/tree/master" branch, published to "http://www.opensc-project.org/downloads/nightly/ludovic/":http://www.opensc-project.org/downloads/nightly/ludovic/ ("status":https://www.opensc-project.org/autobuild/view/Ludovic/) (topics: misc)
 * "Martin Paljak":https://github.com/martinpaljak, ""proposed":https://github.com/martinpaljak/OpenSC/tree/proposed" branch, published to "http://www.opensc-project.org/downloads/nightly/martin/":http://www.opensc-project.org/downloads/nightly/martin/ ("status":https://www.opensc-project.org/autobuild/view/Martin/) (topics: building, packaging, misc, EstonianEid)
 * "Peter Marschall":https://github.com/marschap, ""testing":https://github.com/marschap/OpenSC/tree/testing" branch, published to "http://www.opensc-project.org/downloads/nightly/peter/":http://www.opensc-project.org/downloads/nightly/peter/ ("status":https://www.opensc-project.org/autobuild/view/Peter/) (topics: [[OpenPGP-card|OpenPGP-card]], tools)
 * "Viktor Tarasov":https://github.com/viktorTarasov, ""secure-messaging":https://github.com/viktorTarasov/OpenSC/tree/secure-messaging" branch, published to "http://www.opensc-project.org/downloads/nightly/viktor/":http://www.opensc-project.org/downloads/nightly/viktor/ ("status":https://www.opensc-project.org/autobuild/view/Viktor/) (topics: SecureMessaging, misc, [[IAS-ECC|IAS-ECC]])



h2. Setting up build slaves

For setting up additional build slaves on alternativ architectures or operating systems, please contact opensc-devel or martin@martinpaljak.net directly. Jenkins is based on Java, thus a JRE is required for running a builder. Slaves need to be able to connect to www.opensc-project.org:8887 (TCP)

h3. Windows

 * Set up the build environment as described in WindowsInstaller
 * Install "WinSCP":http://winscp.net/eng/index.php for uploading built installer to opensc-project.org
  * Select "Install for all users" and "Add to PATH" on installation
  * After installation, open WinSCP, select "Preferences" and "Storage" and turn on INI based storage (by turning off registry based preferences storage)
 * Change the Git tool path for Windows nodes to "git.cmd" (otherwise git command would not be found)

h4. x86 build snippet
<pre><code>set PATH=C:\mingw\msys\1.0\bin;C:\mingw\bin;%PATH%
bash.exe -c ./bootstrap
bash.exe -c ./configure
call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x86 /Release
nmake -f Makefile.mak
cmd /c "cd win32 && nmake /f Makefile.mak OpenSC.msi"
winscp /command "option batch on" "option confirm off" "open sftp://fileserver@www.opensc-project.org -hostkey=""ssh-rsa 4096 5f:b7:18:79:ee:34:5a:57:9d:28:69:19:c3:d7:a5:8a"" -privatekey=c:\path\to\key.ppk" "put win32\OpenSC.msi nightly/win32/OpenSC-r%SVN_REVISION%.%BUILD_NUMBER%.msi" "exit"
</code></pre>


h4. x64 build snippet
<pre><code>set PATH=C:\mingw\msys\1.0\bin;C:\mingw\bin;%PATH%
bash.exe -c ./bootstrap
bash.exe -c ./configure
call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 /Release
nmake /f Makefile.mak BUILD_ON=WIN64 BUILD_FOR=WIN64
cmd /c "cd win32 && nmake /f Makefile.mak BUILD_ON=WIN64 BUILD_FOR=WIN64 OpenSC.msi"
winscp /command "option batch on" "option confirm off" "open sftp://fileserver@www.opensc-project.org -hostkey=""ssh-rsa 4096 5f:b7:18:79:ee:34:5a:57:9d:28:69:19:c3:d7:a5:8a"" -privatekey=c:\path\to\key.ppk"  "put win32\OpenSC.msi nightly/win64/OpenSC-r%SVN_REVISION%.%BUILD_NUMBER%.msi" "exit"
</code></pre>


h3. Mac OS X

 * Set up the build environment as described in MacInstaller
 * Make sure that the user running the build slave can connect to "fileserver" OpenSSH alias with a key

h4. 10.5/10.6 build snippet
<pre><code>
# pull in fink
test -r /sw/bin/init.sh && . /sw/bin/init.sh
test -f Makefile && make clean
# build the DMG
./MacOSX/build 10.5
# upload to opensc-project.org
scp OpenSC-10.5.dmg fileserver:./nightly/mac/OpenSC-10.5-r${SVN_REVISION}.${BUILD_NUMBER}.dmg
</code></pre>

h2. Jenkins configuration

 * Git plugin: 1.1.15 (because of "JENKINS-13007":https://issues.jenkins-ci.org/browse/JENKINS-13007)

